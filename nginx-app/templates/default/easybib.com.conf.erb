<%= render_upstream(@php_upstream, @upstream_name) -%>

server {
    listen 80 <%=@listen_opts%>;

<% if @nginx_extra -%>
    <%= @nginx_extra -%>
<% end -%>

<% if @domain_name -%>
    server_name <%=@domain_name%>;
<% end -%>

    client_max_body_size <%= fetch_node(node, @app_name, 'nginx-app', 'client_max_body_size') %>;

    # Block ad calls to /something/<script type="text/javascript">
    location ~* <script {
        deny all;
    }

    root <%= @doc_root %>;

    location ~ /(doubleclick|eyeblaster|eyewonder|pointroll|unicast)/.*\.html {
        access_log  <%= @access_log %>;
    }

    # VAST tag location for serving video
    location /vmntribes-vast-tag/ {
        proxy_pass "http://www.burstnet.com/burstmedia/display/s=27759/a=e/v=4.0S/sz=0x0V/NZ/SA/9870197013/K=videopair/RETURN-CODE/TXT/";
        proxy_set_header Host "www.burstnet.com";
        proxy_connect_timeout 5s;
        proxy_read_timeout 5s;
        proxy_send_timeout 5s;
    }

<%
['/google8a01a818524239c8.html', '/googled16040836651a26a.html', '/bsm-xd.html'].each do |route|
-%>
    location ^~ <%= route %> {
        access_log  <%= @access_log %>;
    }
<%
end
-%>


<%= render "partials/silence-notfound.erb", :cookbook => "nginx-app" -%>

    <%= render "partials/status-checks.erb",
      :cookbook => "nginx-app",
      :variables => {
        :access_log => @access_log,
        :health_check => 'health_check.php',
        :upstream => @upstream_name
      }
    -%>

<% module_dir = "#{@app_dir}app/modules" -%>

<%= render 'partials/module-assets.erb',
  :cookbook => 'nginx-app',
  :variables => {
    :access_log => @access_log,
    :assets => @js_alias,
    :module_dir => module_dir,
    :type => 'js'
  }
-%>

<%= render 'partials/module-assets.erb',
  :cookbook => 'nginx-app',
  :variables => {
    :access_log => @access_log,
    :assets => @img_alias,
    :module_dir => module_dir,
    :type => 'images'
  }
-%>

<%= render 'partials/module-assets.erb',
  :cookbook => 'nginx-app',
  :variables => {
    :access_log => @access_log,
    :assets => @css_alias,
    :module_dir => module_dir,
    :type => 'css'
  }
-%>

<% node['nginx-app']['static_directories'].each do |dir| -%>
    location ^~ /<%=dir%>/ {
        access_log <%= @access_log %>;
        add_header Access-Control-Allow-Origin *;
    }
<% end -%>

    location ~* \.(<%= NginxApp::Helpers::uncached_static_extensions(node['nginx-app']['browser_caching'])%>)$ {
        # Prevent static content to be handled by php
        # See easybib/issues#417
        access_log <%= @access_log %>;
        add_header Access-Control-Allow-Origin *;
    }

<% unless node['nginx-app']['browser_caching'].nil? -%>
    <%= render 'partials/browser-caching.erb',
      :cookbook => 'nginx-app',
      :variables => {
        :enabled => node['nginx-app']['browser_caching']['enabled'],
        :config => node['nginx-app']['browser_caching']['config']
      }
    %>
<% end -%>

    location / {
        access_log <%= @access_log %>;

        include <%=node['nginx-app']['config_dir']%>/fastcgi_params;

        fastcgi_pass  <%= @upstream_name %>_phpfpm;
        fastcgi_index index.php;

    <% unless @environment.empty? -%>
        fastcgi_param BIB_ENV "<%=@environment%>";
    <% end -%>
        fastcgi_param SCRIPT_FILENAME $document_root/index.php;

        index  index.php index.html index.htm;
    }
}
