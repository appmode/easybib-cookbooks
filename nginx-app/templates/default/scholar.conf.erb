<%= render_upstream(@php_upstream, @upstream_name) %>

server {
    set $fastcgi_skipcache 1; # skip by default

    listen 80 <%=@listen_opts%>;

    index <%=@default_router%> index.php;

    access_log <%= @access_log %>;

    location ~* (\.deploy_configuration) {
        deny all;
    }

<% if !@domain_name.nil? && !@domain_name.empty? -%>
    server_name <%=@domain_name%>;
<% end -%>

<% if @nginx_extra -%>
    <%= @nginx_extra -%>
<% end -%>

<% if @htpasswd && !@htpasswd.empty? && File.exist?(@htpasswd) -%>
    auth_basic            "Restricted";
    auth_basic_user_file  <%= @htpasswd%>;
<% end -%>

    root <%= @doc_root%>;

    if ($http_x_cache_me) {
        set $fastcgi_skipcache 0;
    }

    <% unless @node.fetch('easybib_deploy', {}).fetch('scholar', {})['asset_root'].nil? -%>
<%= render "partials/production-asset-route.erb", :cookbook => 'nginx-app', :variables => {
    "asset_root" => @node['easybib_deploy']['scholar']['asset_root']
    } %>
    <% end %>

<%= render "partials/status-checks.erb", :cookbook => 'nginx-app', :variables => {
        "upstream" => @upstream_name,
        "health_check" => @health_check
    } %>

    location = / {
        try_files @site @site;
    }

    #all other locations try other files first and go to our front controller if none of them exists
    location / {
        try_files $uri $uri/ @site;
    }

<% if @php_bypass_static_content -%>
    location ~* \.(jpg|jpeg|gif|png|css|js|ico|txt)$ {
        # Just an empty block so it is not matched by @site below
        # See easybib/issues#417
    }
<% end -%>

    location ~* \.(eot|ttf|woff)$ {
        add_header Access-Control-Allow-Origin *;
    }

    location ~* \.php$ {
        fastcgi_pass  <%=@upstream%>_phpfpm;
        include       fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param SCRIPT_NAME     $fastcgi_script_name;
<% if @env_conf && !@env_conf.empty? -%>
        <%=@env_conf-%>
<% end -%>
    }

    location @site {
        fastcgi_pass  <%=@upstream_name%>_phpfpm;
        include       fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root/<%=@default_router%>;

        add_header X-Cache $upstream_cache_status;

<% if @cache_config and @cache_config["enabled"] == true -%>
        fastcgi_cache <%=@cache_config["zone"]%>;
        fastcgi_cache_bypass $fastcgi_skipcache;
        fastcgi_no_cache $fastcgi_skipcache;
<% end -%>

<% if @env_conf && !@env_conf.empty? -%>
        <%=@env_conf%>
<% end -%>
    }

<% unless node['nginx-app']['browser_caching'].nil? -%>
    <%= render 'partials/browser-caching.erb',
      :cookbook => 'nginx-app',
      :variables => {
        :enabled => node['nginx-app']['browser_caching']['enabled'],
        :config => node['nginx-app']['browser_caching']['config']
      }
    %>
<% end -%>

<% if @gzip -%>
gzip <%= (@gzip['enabled']) ? 'on':'off' %>;
<%= render 'generic-conf.erb', :cookbook => 'nginx-app', :variables => {
    :prefix => 'gzip',
    :config => @gzip['config']
} %>
<% end -%>

<% if !@routes_denied.nil? && !@routes_denied.empty? -%>
<%= render "partials/routes-denied.erb", :cookbook => 'nginx-app'  %>
<% end %>
}
