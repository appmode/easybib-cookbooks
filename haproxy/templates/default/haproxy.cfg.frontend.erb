frontend http-in
  bind *:80
  <% unless @node['haproxy']['ssl'] == 'off'
    certificate = "#{@node['ssl-deploy']['directory']}/cert.combined.pem"
  -%>
  bind *:443 ssl crt <%= certificate %>
  http-request add-header X-Proto https if { ssl_fc }
  <% if @node['haproxy']['ssl'] == 'only' -%>
  redirect scheme https if !{ ssl_fc }
  <% end
  end -%>
  option log-separate-errors

  <% if !@node['haproxy']['acls'].nil? || @node['haproxy']['acls'].empty?  -%>
  #acls from node json:
    <% @node['haproxy']['acls'].each do |aclname,aclconfig| -%>
  #rule <%= aclname %>
  <%= aclconfig %>
    <% end -%>
  <% end -%>

  <% if !@node['haproxy']['additional_layers'].nil?-%>
  #additional backends:
    <% @node['haproxy']['additional_layers'].each do |layername,layerconfig| -%>
      <% if @node['opsworks']['layers'][layername]['instances'].empty? -%>
  #skipping layer <%= layername %> because layer has no instances
      <% else %>
        <% layerconfig['acl'].each do |aclid, acl| -%>
  #rule <%= aclid %>
  acl use_<%= layername %> <%= acl %>
  use_backend <%= layername %>_php_app_servers if use_<%= layername %>
        <% end -%>
      <% end -%>
    <% end -%>
  <% end -%>

  <% if !@node['opsworks']['layers']['nginxphpapp']['instances'].empty? -%>
  default_backend nginxphpapp_php_app_servers
  <% end -%>
